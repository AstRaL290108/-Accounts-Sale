1. Создать бота и структуру проэкта
	Сделаем пару трюков, которые я спиздил у профессиональных ботов. А именно вывод ошибки в консоль без остановки бота, если нужно будет делать HotFix-ы, и папу bin, куда мы сложем почти полезную хуйню для бота. Машину состояний и мой модуль для работы с БД. Делать специфические функции для базы данных, как делают все, я не буду, т.к у меня есть уневерсальное решение, о котором я уже говорил.

2. Подключить и установить все модули
	aiogram
	pymysql
	configparser

3. Зарегать бота
	Сразу наебеним дизайна, решил я, и придумал только название. С ним я долго ебаться не стал, всего 15 минут, а остальное я отложил нахуй. Разберёмся потом

4. Настроить файл конфигурации
	Создаём config.ini файл, в котором мы будем прописывать конфигурации нашего бота. Далее создаём config.py, в котором с помощью модуля configparser считаем данные нашего бота. Это делается для более удобного изменения покупателем бота. Это очень распространённый приём.

5. Подключение базы данных
	Данные от которой мы также запишен в config.ini. И в отличии от всяких долбаёбов использовать мы будем MySQL, а не SQLite3, т.к последнее не подходит для крупных проэктов

6. Структурировать товары
	У нас будет 2 таблици: 1 - просто все товары, 2 - трейды для передачи.
	Для начала я решил не начинать делать ничего сложного, поэтому сделал то, что посчитал самым лёгким: корзину товаров, профиль с данными и реферальный кабинет и реф.систему.

	ОПИСАТЬ РЕФЕРАЛЬНУЮ СИСТЕМУ

7. Сделать отображение товаров название - цена
	Что ещё важно, переменные с текстом мы будем делать тройными, для того, чтобы будующий покупатель бота мог сам изменить текст.

	Делаем топ последних загруженных товаров, чо и будет нашим основным спутником на пути отладки, т.к поиск для этих целей не подходит.

	Не отходя от кассы, сделаем просмотр конкретного товара, с превью, названием и описанием. + добавим нужные кнопки: покупку и добавление в корзину. Определение товара будет в этой inline кнопке: через дефис в callback date-е мы запишем действие, в данном случае view, и id товара.

	Так же нужно сделать добавление товаров в корзину, что заняло чуть больше строк кода, чем я ожидал. И, что удивительно, мне пришлось сделать обработку тех случаев, где ты пытаешься добавить товар, который у тебя уже есть.

И вот мы уже на 1/16 пути к победе, но в данный момент я решил, что красивый бот и работает лучше, поэтому вне планов хуярим дизайн, что есть сил! И под этими словами я подразусеваю то, что мы спиздим всё с гугла. Ну а хули? Я не дизайнер!


	Прошла 1 ночь и до меня дошло: я забыл добавить удаление конкретного товара из карзины
	Т.к в БД у нас избранные товары - это просто их id через условный разделитель(&) мы не сможем на прямую удалить id из данной строки. Чтобы сделать это мы просто возьмём исходную строку разабъём её на массив уже из этого массива по способу из интернета удалим нужное значение, после чего склеиваем массив в новую строку, которая уже без исхожного id товара.
	Это может звучать сложно, но реализация умещается в 29 строк кода


8. Сделать поиск товара
	Прошло время, а отдохнул, а это значит, что пора двигаться дальше! Поиск товара - это то, чум вы будете ползоваться 90% времени. А сделать его очень просто. Для этого нам понадобиться: состояние 1 штука, обработчики 2 штука, новые файлы 3 штука. Принцип такой: текст, который ввёл пользователь, мы разбиваем на слова, убрав при этом все знаки препинпния. А потом перебором сравниваем эти слова с также разбитыми названиями объявлений. Можно добавить ещё и эту хрень с описанием. Если слова совпадают, добавляем товар в список на выход. И после перебираем уже получившийся список, чтобы получить список из кнопок, ведущих на страницы просмотра.


9. Сделать возможность добавить товар и редактировать
	В процессе создания добавления аккаунта нам необходимо использовать машину состояний, 
	которая позволяет хранить данные и передавать их в процессе перехолда из одного состояния в другое в пределах одной группы состояний. Aiogram-у за это огромное спасибо!!! 

	И в этот день я решил перейти со стандартной cmd на кастомную. Просто зацените моё безвкусие. Но, несмотря на это, инструмент крутой, единственный крутой в Microsoft Stor. 

	Вернёмся к машине состояний. Она в данном случае помогает разбить стандартную форму на сайте на перечень вопросов. И состояние изменится только тогда, когда пользователь корректно заполниу предыдущую условную графу. Чтоыб удобно собирать данные из условной формы я придумал свою систему. Может быть она в корне не правиьлная, но мне как-то похуй. 

	Суть заключается в том, чтобы делать запрос на какие-то данные в одном состоянии, менять это состояние, а потом, уже в другом обработчике, собирать эти данные и спрашивать новые, и так далее. И получаются такие обработчики, которые внося в условный реестор название объявления, и тут же отправляют запрос на ввод описания.

	Я даже успел пару раз запутаться, но в итоге у меня всё получилось. Тут главное за всем следить, делать добавления поочерёдно и самое-самое главное не торопиться. Также у меня как обычно были проблемы с загрузкой изображений, нихуя нового. Оказалосья просто забыл нахуй, что в aiogram есть комманда для скачивания документа. И к стати картинку нужно добавлять в формате document. А также я только сейчас вспомния, что не дописывал доп. инструкций вот сюда. Ладно похуй!

	Чамое важное: предпросмотр нашего объявления. Сделать его было ну очень просто! Это тоже самое как когда мы делали просмотр конкретного товара. И нужно ещё сделать подтверждение добавления объявления и отмену. При подтверждении нужно скачивать картинку, т.к в базе я её хранить в рот ебал и занесение в эту базу данные о товаре. Ну или удалить картинку при отмене. Важно не забыть добавить везде кнопки отмены.

Я решил сделать это уже за кадром, кроме того я решил добавить раздел со всеми моими объявлениями вместо простого добавления и тут случился баг: вот этот обработчик не хотел обрабатываться. И я никак не мог понять почему. И название функции верное, и call back data правильная, но не работает и хоть выебись. 

Знаете в чём была проблема? В файле main.py файл с добавлением объявлений оюрабатывался сразу после отображения этих объявлений. А как вы помните, там был собирательный обработчик, в который и попадал запрос. Решалось это элементарно: нужно просто переставить обработчик с отображением товаров в самый низ. И БЛЯТЬ ВСЁ! Я чють нервный срыв не словил!

10. Сделать пополнение кошелька
11. Сделать передачу аккаунта
12. Сделать вывод денег